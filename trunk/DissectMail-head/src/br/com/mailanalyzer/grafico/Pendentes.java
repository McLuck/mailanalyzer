/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Pendentes.java
 *
 * Created on 25/09/2011, 20:41:41
 */

package br.com.mailanalyzer.grafico;

import br.com.mailanalyzer.analise2.GerenciamentoAnalisador;
import br.com.mailanalyzer.analise2.Raiz;
import br.com.mailanalyzer.domain.Message;
import br.com.mailanalyzer.main.Config;
import javax.swing.JOptionPane;

/**
 *
 * @author McLuck
 */
public class Pendentes extends javax.swing.JFrame {

    /** Creates new form Pendentes */
    public Pendentes(Message mensagem) {
        initComponents();
        this.origemStr = mensagem.getOrigem();
        this.origem.setText(this.origem.getText().replace("#origem#", origemStr));
        this.msg_txt.append(mensagem.getMensagem());
        initCombo();
    }

    public void initCombo(){
        if (GerenciamentoAnalisador.getMatrizes() == null) {
            GerenciamentoAnalisador.load();
        }
        for (Raiz raiz : GerenciamentoAnalisador.getMatrizes()) {
            raizes.addItem(new ComboBox(raiz));
        }
    }
    private String origemStr;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        msg_txt = new javax.swing.JTextArea();
        origem = new javax.swing.JLabel();
        raizes = new javax.swing.JComboBox();
        addAgregacao = new javax.swing.JButton();
        addMandatorio = new javax.swing.JButton();
        addEliminatorio = new javax.swing.JButton();
        sequencial = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        msg_txt.setColumns(20);
        msg_txt.setRows(5);
        jScrollPane1.setViewportView(msg_txt);

        origem.setText("Enviador por: #origem#");

        raizes.setSelectedItem(raizes);

        addAgregacao.setText("Adicionar texto Selecionado como Agregação no assunto selecionado");
        addAgregacao.setActionCommand("agregCommand");
        addAgregacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAgregacaoActionPerformed(evt);
            }
        });

        addMandatorio.setText("Adicionar texto Selecionado como Mandatório no assunto selecionado");
        addMandatorio.setActionCommand("mandatorioCommand");
        addMandatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMandatorioActionPerformed(evt);
            }
        });

        addEliminatorio.setText("Adicionar texto Selecionado como Eliminatório no assunto selecionado");
        addEliminatorio.setActionCommand("eliminatorioCommand");
        addEliminatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEliminatorioActionPerformed(evt);
            }
        });

        sequencial.setText("Considerar as mesmas posições das palavras na composição");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                            .add(origem)
                            .add(raizes, 0, 510, Short.MAX_VALUE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(21, 21, 21)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(addAgregacao, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(sequencial, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 444, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, addEliminatorio, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
                                    .add(addMandatorio, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE))
                                .add(5, 5, 5)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(26, 26, 26)
                .add(origem)
                .add(18, 18, 18)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 169, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(raizes, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(sequencial)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(addAgregacao)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(addMandatorio)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(addEliminatorio))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addAgregacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAgregacaoActionPerformed
        int peso;
        try{
            peso = Integer.parseInt(JOptionPane.showInputDialog("Informe o peso desta agregação."));
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Erro ao tratar o valor do peso informado.\nAção cancelada!");
            return;
        }
        String txt = msg_txt.getSelectedText();
        ComboBox cb = (ComboBox)raizes.getSelectedItem();
        int raizID = cb.getId();
        Config.Register.ADD_COMPOSICAO_AGREGACAO(txt, sequencial.isSelected(), peso, raizID);
        JOptionPane.showMessageDialog(null, "Nova agregação salva com sucesso!");
    }//GEN-LAST:event_addAgregacaoActionPerformed

    private void addMandatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMandatorioActionPerformed
        String txt = msg_txt.getSelectedText();
        ComboBox cb = (ComboBox)raizes.getSelectedItem();
        int raizID = cb.getId();
        Config.Register.ADD_COMPOSICAO_MANDATORIA(txt, sequencial.isSelected(), raizID);
        JOptionPane.showMessageDialog(null, "Novo Contexto Mandatório salvo com sucesso!");
    }//GEN-LAST:event_addMandatorioActionPerformed

    private void addEliminatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEliminatorioActionPerformed
        String txt = msg_txt.getSelectedText();
        ComboBox cb = (ComboBox)raizes.getSelectedItem();
        int raizID = cb.getId();
        Config.Register.ADD_COMPOSICAO_ELIMINATORIA(txt, sequencial.isSelected(), raizID);
        JOptionPane.showMessageDialog(null, "Nova Composição Eliminatório salva com sucesso!");
    }//GEN-LAST:event_addEliminatorioActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAgregacao;
    private javax.swing.JButton addEliminatorio;
    private javax.swing.JButton addMandatorio;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea msg_txt;
    private javax.swing.JLabel origem;
    private javax.swing.JComboBox raizes;
    private javax.swing.JCheckBox sequencial;
    // End of variables declaration//GEN-END:variables

}
